-- MySQL Script generated by MySQL Workbench
-- Wed Aug 12 23:41:25 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema makeanevents
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema makeanevents
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `makeanevents` DEFAULT CHARACTER SET utf8 ;
USE `makeanevents` ;

-- -----------------------------------------------------
-- Table `makeanevents`.`usergroups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`usergroups` (
  `id_group` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_group`),
  UNIQUE INDEX `id_group_UNIQUE` (`id_group` ASC) VISIBLE,
  UNIQUE INDEX `Name_UNIQUE` (`Name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `makeanevents`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`user` (
  `id_user` INT NOT NULL AUTO_INCREMENT,
  `group_id` INT NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `password` INT NOT NULL,
  `email` VARCHAR(255) NOT NULL,
  `phone` VARCHAR(255) NULL,
  `name` VARCHAR(255) NULL,
  `surname` VARCHAR(255) NULL,
  `comment` VARCHAR(255) NULL,
  PRIMARY KEY (`id_user`, `group_id`),
  UNIQUE INDEX `id_user_UNIQUE` (`id_user` ASC) VISIBLE,
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  INDEX `fk_User_Group_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `fk_User_Group`
    FOREIGN KEY (`group_id`)
    REFERENCES `makeanevents`.`usergroups` (`id_group`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `makeanevents`.`eventstatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`eventstatus` (
  `id_eventstatus` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_eventstatus`),
  UNIQUE INDEX `id_eventstatus_UNIQUE` (`id_eventstatus` ASC) VISIBLE,
  UNIQUE INDEX `Name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `makeanevents`.`eventregstatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`eventregstatus` (
  `id_eventregstatus` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_eventregstatus`),
  UNIQUE INDEX `id_eventregstatus_UNIQUE` (`id_eventregstatus` ASC) VISIBLE,
  UNIQUE INDEX `Name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `makeanevents`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`event` (
  `id_event` INT NOT NULL,
  `eventstatus_id` INT NOT NULL,
  `eventregstatus_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `place` VARCHAR(255) NOT NULL,
  `eventTime` BIGINT NOT NULL,
  `maxParticipants` INT NOT NULL,
  `createTime` BIGINT NOT NULL,
  `critTime` BIGINT NOT NULL,
  PRIMARY KEY (`id_event`, `eventstatus_id`, `eventregstatus_id`),
  UNIQUE INDEX `id_event_UNIQUE` (`id_event` ASC) VISIBLE,
  INDEX `fk_Event_EventStatus1_idx` (`eventstatus_id` ASC) VISIBLE,
  INDEX `fk_Event_EventRegStatus1_idx` (`eventregstatus_id` ASC) VISIBLE,
  FULLTEXT INDEX `ftext_name_place_desc` (`name`, `description`, `place`) VISIBLE,
  CONSTRAINT `fk_Event_EventStatus1`
    FOREIGN KEY (`eventstatus_id`)
    REFERENCES `makeanevents`.`eventstatus` (`id_eventstatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Event_EventRegStatus1`
    FOREIGN KEY (`eventregstatus_id`)
    REFERENCES `makeanevents`.`eventregstatus` (`id_eventregstatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `makeanevents`.`participantstatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`participantstatus` (
  `id_participantstatus` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id_participantstatus`),
  UNIQUE INDEX `id_participantstatus_UNIQUE` (`id_participantstatus` ASC) VISIBLE,
  UNIQUE INDEX `Name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `makeanevents`.`participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `makeanevents`.`participant` (
  `id_participant` INT NOT NULL AUTO_INCREMENT,
  `event_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `participantStatus_id` INT NOT NULL,
  `user_id_whoadd` INT NOT NULL,
  `isAuthor` TINYINT(1) NOT NULL DEFAULT 0,
  `regDatetime` BIGINT NOT NULL,
  UNIQUE INDEX `id_participant_UNIQUE` (`id_participant` ASC) VISIBLE,
  PRIMARY KEY (`id_participant`, `event_id`, `user_id`, `participantStatus_id`, `user_id_whoadd`),
  INDEX `fk_Participant_Event1_idx` (`event_id` ASC) VISIBLE,
  INDEX `fk_Participant_User1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_Participant_ParticipantStatus1_idx` (`participantStatus_id` ASC) VISIBLE,
  INDEX `fk_Participant_User2_idx` (`user_id_whoadd` ASC) VISIBLE,
  CONSTRAINT `fk_Participant_Event1`
    FOREIGN KEY (`event_id`)
    REFERENCES `makeanevents`.`event` (`id_event`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Participant_User1`
    FOREIGN KEY (`user_id`)
    REFERENCES `makeanevents`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Participant_ParticipantStatus1`
    FOREIGN KEY (`participantStatus_id`)
    REFERENCES `makeanevents`.`participantstatus` (`id_participantstatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Participant_User2`
    FOREIGN KEY (`user_id_whoadd`)
    REFERENCES `makeanevents`.`user` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
